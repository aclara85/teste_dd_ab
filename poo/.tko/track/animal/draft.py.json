{
    "patches": [
        {
            "label": "2025-10-04_17-29-13",
            "content": "@@ -1,1430 +0,0 @@\n-class Animal:%0A    def __init__(self, tipo: str, som: str):%0A        self.tipo: str = tipo%0A        self.som: str = som%0A        self.idade: int = 0%0A%0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.tipo%7D:%7Bself.idade%7D:%7Bself.som%7D%22%0A    %0A    def envelhecer(self,anos: int) -%3E None: %0A        if self.idade == 4:%0A            print(f%22aviso: %7Bself.tipo%7D j%C3%A1 morreu%22)%0A            return%0A        self.idade += anos%0A        if self.idade %3E= 4:%0A            self.idade = 4%0A            print(f%22aviso: %7Bself.tipo%7D morreu%22)%0A%0A    def emitir_som(self) -%3E str:%0A        if self.idade == 0:%0A            return %22_ _ _%22%0A        elif self.idade in (1, 2, 3):%0A            return self.som%0A        elif self.idade ==4:%0A            return %22Rip%22%0A        %0A    def main():%0A        bicho = Animal = Animal (%22%22, %22%22)%0A        while True:%0A            comando: str = input()%0A            print(%22$%22 + comando)%0A            partes: list%5Bstr%5D = comando.split(%22 %22)%0A%0A            if partes%5B0%5D == %22end%22:%0A                break%0A            elif partes%5B0%5D == %22init%22:%0A                tipo: str = partes %5B1%5D%0A                som: str = partes %5B2%5D%0A                bicho = Animal (tipo, som)%0A            elif partes%5B0%5D == %22show%22:%0A                print(bicho)%0A            elif partes%5B0%5D == %22grow%22:%0A                anos: int = int(partes%5B1%5D)%0A                bicho.envelhecer(anos)%0A            elif partes%5B0%5D == %22noise%22:%0A                print(bicho.emitir_som())%0A    main()%0A            %0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-04_18-19-28",
            "content": "class Animal:\n    def __init__(self, tipo: str, som: str):\n        self.tipo: str = tipo\n        self.som: str = som\n        self.idade: int = 0\n\n    def __str__(self) -> str:\n        return f\"{self.tipo}:{self.idade}:{self.som}\"\n    \n    def envelhecer(self,anos: int) -> None: \n        if self.idade == 4:\n            print(f\"aviso: {self.tipo} j\u00e1 morreu\")\n            return\n        self.idade += anos\n        if self.idade >= 4:\n            self.idade = 4\n            print(f\"aviso: {self.tipo} morreu\")\n\n    def emitir_som(self) -> str:\n        if self.idade == 0:\n            return \"_ _ _\"\n        elif self.idade in (1, 2, 3):\n            return self.som\n        elif self.idade ==4:\n            return \"Rip\"\n        \n    def main():\n        bicho = Animal = Animal (\"\", \"\")\n        while True:\n            comando: str = input()\n            print(\"$\" + comando)\n            partes: list[str] = comando.split(\" \")\n\n            if partes[0] == \"end\":\n                break\n            elif partes[0] == \"init\":\n                tipo: str = partes [1]\n                som: str = partes [2]\n                bicho = Animal (tipo, som)\n            elif partes[0] == \"show\":\n                print(bicho)\n            elif partes[0] == \"grow\":\n                anos: int = int(partes[1])\n                bicho.envelhecer(anos)\n            elif partes[0] == \"noise\":\n                print(bicho.emitir_som())\n    main()\n            \n",
            "lines": "48"
        }
    ]
}